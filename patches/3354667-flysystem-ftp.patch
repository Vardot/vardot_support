diff --git a/composer.json b/composer.json
index 14f8c44..8d7d699 100644
--- a/composer.json
+++ b/composer.json
@@ -1,19 +1,10 @@
 {
-  "name": "drupal/flysystem",
-  "type": "drupal-module",
-  "require": {
-    "league/flysystem": "^1.0.3",
-    "league/flysystem-replicate-adapter": "~1.0",
-    "twistor/flysystem-stream-wrapper": "^1.0.5"
-  },
-
-  "require-dev": {
-    "league/flysystem-memory": "~1.0"
-  },
-
-  "autoload": {
-    "psr-4": {
-      "Drupal\\flysystem\\": "src/"
+    "name": "drupal/flysystem",
+    "type": "drupal-module",
+    "require": {
+        "league/flysystem": "^1.0.3",
+        "league/flysystem-replicate-adapter": "~1.0",
+        "league/flysystem-sftp": "~1.0",
+        "twistor/flysystem-stream-wrapper": "^1.0.5"
     }
-  }
 }
diff --git a/src/Flysystem/Sftp.php b/src/Flysystem/Sftp.php
new file mode 100644
index 0000000..5363ebf
--- /dev/null
+++ b/src/Flysystem/Sftp.php
@@ -0,0 +1,93 @@
+<?php
+
+/**
+ * @file
+ * Contains \Drupal\flysystem_sftp\Flysystem\Sftp.
+ */
+
+namespace Drupal\flysystem\Flysystem;
+
+use Drupal\Core\Logger\RfcLogLevel;
+use Drupal\flysystem\Flysystem\Adapter\MissingAdapter;
+use Drupal\flysystem\Plugin\FlysystemPluginInterface;
+use Drupal\flysystem\Plugin\FlysystemUrlTrait;
+use League\Flysystem\PhpseclibV3\SftpAdapter;
+
+/**
+ * Drupal plugin for the "SFTP" Flysystem adapter.
+ *
+ * @Adapter(id = "sftp")
+ */
+class Sftp implements FlysystemPluginInterface {
+
+  use FlysystemUrlTrait;
+
+  /**
+   * Plugin configuration.
+   *
+   * @var array
+   */
+  protected $configuration;
+
+  /**
+   * Constructs an Sftp object.
+   *
+   * @param array $configuration
+   *   Plugin configuration array.
+   */
+  public function __construct(array $configuration) {
+    $this->configuration = $configuration;
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function getAdapter() {
+    try {
+      $adapter = new SftpAdapter($this->configuration);
+      $adapter->connect();
+    }
+
+    catch (\Exception $e) {
+      $adapter = new MissingAdapter();
+    }
+
+    return $adapter;
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function ensure($force = FALSE) {
+    try {
+      $adapter = new SftpAdapter($this->configuration);
+      $adapter->connect();
+    }
+
+    catch (\LogicException $e) {
+      return [[
+        'severity' => RfcLogLevel::ERROR,
+        'message' => 'Unable to login to the SFTP server %host:%port with the provided credentials.',
+        'context' => [
+          '%host' => $this->configuration['host'],
+          '%port' => isset($this->configuration['port']) ? $this->configuration['port'] : 22,
+        ],
+      ]];
+    }
+
+    catch (\RuntimeException $e) {
+      return [[
+        'severity' => RfcLogLevel::ERROR,
+        'message' => 'The root %root is invalid or does not exist on the SFTP server %host:%port.',
+        'context' => [
+          '%root' => $this->configuration['root'],
+          '%host' => $this->configuration['host'],
+          '%port' => isset($this->configuration['port']) ? $this->configuration['port'] : 22,
+        ],
+      ]];
+    }
+
+    return [];
+  }
+
+}
